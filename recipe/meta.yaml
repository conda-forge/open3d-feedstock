{% set name = "Open3D" %}
{% set version = "0.19.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/isl-org/Open3D/archive/v{{ version }}.tar.gz
  sha256: 5cedb0e093c6baceab801b903eb8e2558bc2b3999ac57762bf78a39d5e15394a
  patches:
    - fix-unzip.patch
    - fix-curl.patch  # [not win]
    - fix-error.patch
    - fix-find-imgui.patch
    - fix-cross-compile-shader.patch  # [build_platform != target_platform]
    - fix-crypto.patch  # [osx]
    - fix-win-extractzip.patch  # [win]
    - fix-win-minizip.patch  # [win]

build:
  number: 2
  entry_points:
    - open3d = open3d.tools.cli:main
  ignore_run_exports_from:
    - libcblas
    - minizip
    - msgpack-c
    - msgpack-cxx
  run_exports:
    - {{ pin_subpackage('open3d', max_pin='x.x.x') }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - cmake
    - make
    - pkg-config
    - llvm-openmp                            # [osx]
    - libgomp                                # [linux]
    - python                                 # [build_platform != target_platform]
    - pip                                    # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - qt6-main                               # [build_platform != target_platform and not ppc64le]
    - libcxx 17                              # [osx]
  host:
    - libcxx >=7                             # [aarch64]
    - libgl-devel                            # [linux]
    - xorg-libxdamage                        # [linux]
    - xorg-libxfixes                         # [linux]
    - libxcb                                 # [linux]
    - setuptools
    - python
    - pip
    - assimp
    - libzlib
    - eigen
    - embree
    - glew
    - glfw
    - fmt
    - libjpeg-turbo
    - gmock
    - jsoncpp
    - zeromq
    - cppzmq
    - msgpack-c
    - msgpack-cxx
    - minizip
    - vtk * qt*
    - qt6-main
    # We have also a vanilla dependency of vtk without pins so that conda-smithy correctly sets the
    # pin from conda-forge-pinnings
    - vtk
    - libpng
    - pybind11
    - qhull
    - qhull-static       # [not win]
    - tinyobjloader
    - libcblas           # [not win]
    - liblapacke         # [not win]
    - liblapack * *mkl   # [win]
    - liblapacke * *mkl  # [win]
    - mkl-devel          # [win]
    - libboost-headers
    - nanoflann
    - liblzf
    - libcurl            # [not win]
    - openssl            # [not linux]
    - tbb-devel
    - liblzma-devel      # [win]
    # TODO: Consider for the future
    # - libidn2  # [osx]
    # - imgui      # Not used currently as we are not building the GUI
    # - tinygltf   # TODO: Does not export cmake config in conda-forge; see https://github.com/conda-forge/tinygltf-feedstock/issues/24
  run:
    - numpy
    - python
    - plotly
    - dash
    - vtk-base * qt*
    - libblas * *mkl  # [win]
    - minizip         # [win]

test:
  imports:
    - open3d
  commands:
    - open3d --help

about:
  home: http://www.open3d.org/
  summary: Open-source library that supports rapid development of software that deals with 3D data.
  license: MIT
  license_file:
    - LICENSE
    - 3rdparty/curl/LICENSE  # [win]
    - 3rdparty/uvatlas/LICENSE_directxheaders
    - 3rdparty/uvatlas/LICENSE_directxmath
    - 3rdparty/uvatlas/LICENSE_uvatlas
    - 3rdparty/possionrecon/LICENSE
    - 3rdparty/rply/LICENSE
    - 3rdparty/tinyfiledialogs/LICENSE
    - 3rdparty/tinygltf/LICENSE
  dev_url: https://github.com/isl-org/Open3D

extra:
  recipe-maintainers:
    - goanpeca
    - Tobias-Fischer
