diff --git a/cmake/cross_compile_helpers/CMakeLists.txt b/cmake/cross_compile_helpers/CMakeLists.txt
new file mode 100644
index 000000000..008a15623
--- /dev/null
+++ b/cmake/cross_compile_helpers/CMakeLists.txt
@@ -0,0 +1,12 @@
+# Specify the minimum version of CMake
+cmake_minimum_required(VERSION 3.14)
+
+# Add the ShaderEncoder executable
+add_executable(ShaderEncoder)
+target_sources(ShaderEncoder PRIVATE ${CMAKE_CURRENT_LIST_DIR}/../ShaderEncoder.cpp)
+target_compile_features(ShaderEncoder PRIVATE cxx_std_14)
+
+# Add the ShaderLinker executable
+add_executable(ShaderLinker)
+target_sources(ShaderLinker PRIVATE ${CMAKE_CURRENT_LIST_DIR}/../ShaderLinker.cpp)
+target_compile_features(ShaderLinker PRIVATE cxx_std_14)

diff --git a/cmake/Open3DAddEncodedShader.cmake b/cmake/Open3DAddEncodedShader.cmake
index 36bcbb8353c..f293a19a6f6 100644
--- a/cmake/Open3DAddEncodedShader.cmake
+++ b/cmake/Open3DAddEncodedShader.cmake
@@ -1,3 +1,6 @@
+set(SHADER_ENCODER_PATH "" CACHE FILEPATH "Path to an existing ShaderEncoder executable")
+set(SHADER_LINKER_PATH "" CACHE FILEPATH "Path to an existing ShaderLinker executable")
+
 # open3d_add_encoded_shader(<target>
 #    OUTPUT_HEADER <header>
 #    SOURCES <shader1> [<shader2>...]
@@ -66,14 +69,24 @@ function(open3d_add_encoded_shader target)
 endfunction()
 
 # Helper target for open3d_add_encoded_shader
-if (NOT TARGET ShaderEncoder)
-    add_executable(ShaderEncoder EXCLUDE_FROM_ALL)
-    target_sources(ShaderEncoder PRIVATE ${CMAKE_CURRENT_LIST_DIR}/ShaderEncoder.cpp)
-    target_compile_features(ShaderEncoder PRIVATE cxx_std_14)
+if(NOT SHADER_ENCODER_PATH)
+    if(NOT TARGET ShaderEncoder)
+        add_executable(ShaderEncoder EXCLUDE_FROM_ALL)
+        target_sources(ShaderEncoder PRIVATE ${CMAKE_CURRENT_LIST_DIR}/ShaderEncoder.cpp)
+        target_compile_features(ShaderEncoder PRIVATE cxx_std_14)
+    endif()
+else()
+    add_executable(ShaderEncoder IMPORTED)
+    set_target_properties(ShaderEncoder PROPERTIES IMPORTED_LOCATION ${SHADER_ENCODER_PATH})
 endif()
 
-if (NOT TARGET ShaderLinker)
-    add_executable(ShaderLinker EXCLUDE_FROM_ALL)
-    target_sources(ShaderLinker PRIVATE ${CMAKE_CURRENT_LIST_DIR}/ShaderLinker.cpp)
-    target_compile_features(ShaderLinker PRIVATE cxx_std_14)
+if(NOT SHADER_LINKER_PATH)
+    if(NOT TARGET ShaderLinker)
+        add_executable(ShaderLinker EXCLUDE_FROM_ALL)
+        target_sources(ShaderLinker PRIVATE ${CMAKE_CURRENT_LIST_DIR}/ShaderLinker.cpp)
+        target_compile_features(ShaderLinker PRIVATE cxx_std_14)
+    endif()
+else()
+    add_executable(ShaderLinker IMPORTED)
+    set_target_properties(ShaderLinker PROPERTIES IMPORTED_LOCATION ${SHADER_LINKER_PATH})
 endif()
